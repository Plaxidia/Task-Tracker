{"ast":null,"code":"var _jsxFileName = \"/Users/plaxidiahove/Desktop/projects/Task-Tracker/client/src/App.js\",\n  _s = $RefreshSig$();\n//import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5001/api/tasks';\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(API_URL);\n      console.log('Server response:', response);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }; /*\n     const addTask = async () => {\n       if (newTask.trim() !== '') {\n         const response = await axios.post(API_URL, { name: newTask });\n         setTasks([...tasks, response.data]);\n         setNewTask('');\n       }\n     };*/\n  const addTask = async () => {\n    if (newTask.trim() !== '') {\n      try {\n        const response = await axios.post(API_URL, {\n          name: newTask\n        });\n\n        // Ensure the API response contains the task object with an \"id\"\n        const addedTask = response.data;\n        if (addedTask && addedTask.id) {\n          setTasks(prevTasks => [...prevTasks, addedTask]);\n          setNewTask('');\n        } else {\n          console.error('Invalid API response for adding task:', response.data);\n        }\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      console.log('Deleting task with ID:', taskId);\n      // Make API call to delete task\n      await axios.delete(`${API_URL}/${taskId}`);\n\n      /* // Update state locally without making another API call\n       const updatedTasks = [...tasks];\n       const index = updatedTasks.findIndex(task => task.id === taskId);\n        if (index !== -1) {\n         updatedTasks.splice(index, 1);\n         setTasks(updatedTasks);\n       }\n      } catch (error) {\n       console.error('Error deleting task:', error);\n      }\n      };*/\n\n      // Update state locally without making another API call\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Task\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = App;\nexport default App;\n/*\n\n         <button className='delete-btn' onClick={() => {\n            setTasks(tasks =>tasks.filter(taskEL =>taskEL.id !== task.id));\n          }}>Delete</button>\n      */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","App","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","get","console","log","data","error","addTask","trim","post","name","addedTask","id","prevTasks","deleteTask","taskId","delete","filter","task","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","className","_c","$RefreshReg$"],"sources":["/Users/plaxidiahove/Desktop/projects/Task-Tracker/client/src/App.js"],"sourcesContent":["\n//import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nconst API_URL = 'http://localhost:5001/api/tasks';\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n        const response = await axios.get(API_URL);\n        console.log('Server response:', response);\n        setTasks(response.data);\n    } catch (error) {\n        console.error('Error fetching tasks:', error);\n    }\n};/*\n  const addTask = async () => {\n    if (newTask.trim() !== '') {\n      const response = await axios.post(API_URL, { name: newTask });\n      setTasks([...tasks, response.data]);\n      setNewTask('');\n    }\n  };*/\n  const addTask = async () => {\n    if (newTask.trim() !== '') {\n      try {\n        const response = await axios.post(API_URL, { name: newTask });\n  \n        // Ensure the API response contains the task object with an \"id\"\n        const addedTask = response.data;\n        if (addedTask && addedTask.id) {\n          setTasks((prevTasks) => [...prevTasks, addedTask]);\n          setNewTask('');\n        } else {\n          console.error('Invalid API response for adding task:', response.data);\n        }\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n  };\n  \n\n  const deleteTask = async (taskId) => {\n    try {\n      console.log('Deleting task with ID:', taskId);\n      // Make API call to delete task\n      await axios.delete(`${API_URL}/${taskId}`);\n\n     /* // Update state locally without making another API call\n      const updatedTasks = [...tasks];\n      const index = updatedTasks.findIndex(task => task.id === taskId);\n\n      if (index !== -1) {\n        updatedTasks.splice(index, 1);\n        setTasks(updatedTasks);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };*/\n\n   // Update state locally without making another API call\n   setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n  } catch (error) {\n    console.error('Error deleting task:', error);\n  }\n};\n  return (\n    <div>\n      <h1>Task Tracker</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button onClick={addTask}>Add</button>\n      </div>\n      <ul>\n      {tasks.map((task) => (\n        <li key={task.id}>\n          {task.task}\n          <button className='delete-btn' onClick={() => deleteTask(task.id)}>\n              Delete\n            </button>\n        </li>\n      ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n/*\n\n         <button className='delete-btn' onClick={() => {\n            setTasks(tasks =>tasks.filter(taskEL =>taskEL.id !== task.id));\n          }}>Delete</button>\n      */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}