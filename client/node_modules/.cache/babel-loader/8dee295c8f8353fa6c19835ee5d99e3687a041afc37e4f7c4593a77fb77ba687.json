{"ast":null,"code":"var _jsxFileName = \"/Users/plaxidiahove/Desktop/projects/Task-Tracker/client/src/App.js\",\n  _s = $RefreshSig$();\n//import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5001/api/tasks';\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(API_URL);\n      console.log('Server response:', response);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  /*const addTask = async () => {\n    if (newTask.trim() !== '') {\n      const response = await axios.post(API_URL, { name: newTask });\n      setTasks([...tasks, response.data]);\n      setNewTask('');\n    }\n  };*/\n\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      // Create a new task object with a unique ID\n      const newTaskObject = {\n        id: Date.now(),\n        task: newTask\n      };\n\n      // Update the tasks array\n      setTasks(prevTasks => [...prevTasks, newTaskObject]);\n\n      // Clear the input field\n      setNewTask('');\n    }\n  };\n  /*const deleteTask = async (taskId) => {\n    try {\n      console.log('Deleting task with ID:', taskId);\n      // Make API call to delete task\n      await axios.delete(`${API_URL}/${taskId}`);\n       // Update state locally without making another API call\n      const updatedTasks = [...tasks];\n      const index = updatedTasks.findIndex(task => task.id === taskId);\n       if (index !== -1) {\n        updatedTasks.splice(index, 1);\n        setTasks(updatedTasks);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };*/\n  const deleteTask = taskId => {\n    // Update the tasks array by filtering out the task with the specified ID\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Task\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = App;\nexport default App;\n/*\n\n         <button className='delete-btn' onClick={() => {\n            setTasks(tasks =>tasks.filter(taskEL =>taskEL.id !== task.id));\n          }}>Delete</button>\n      */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","App","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","get","console","log","data","error","addTask","trim","newTaskObject","id","Date","now","task","prevTasks","deleteTask","taskId","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","className","_c","$RefreshReg$"],"sources":["/Users/plaxidiahove/Desktop/projects/Task-Tracker/client/src/App.js"],"sourcesContent":["\n//import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nconst API_URL = 'http://localhost:5001/api/tasks';\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n        const response = await axios.get(API_URL);\n        console.log('Server response:', response);\n        setTasks(response.data);\n    } catch (error) {\n        console.error('Error fetching tasks:', error);\n    }\n};\n  /*const addTask = async () => {\n    if (newTask.trim() !== '') {\n      const response = await axios.post(API_URL, { name: newTask });\n      setTasks([...tasks, response.data]);\n      setNewTask('');\n    }\n  };*/\n\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      // Create a new task object with a unique ID\n      const newTaskObject = { id: Date.now(), task: newTask };\n\n      // Update the tasks array\n      setTasks((prevTasks) => [...prevTasks, newTaskObject]);\n\n      // Clear the input field\n      setNewTask('');\n    }\n  };\n  /*const deleteTask = async (taskId) => {\n    try {\n      console.log('Deleting task with ID:', taskId);\n      // Make API call to delete task\n      await axios.delete(`${API_URL}/${taskId}`);\n\n      // Update state locally without making another API call\n      const updatedTasks = [...tasks];\n      const index = updatedTasks.findIndex(task => task.id === taskId);\n\n      if (index !== -1) {\n        updatedTasks.splice(index, 1);\n        setTasks(updatedTasks);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };*/\n  const deleteTask = (taskId) => {\n    // Update the tasks array by filtering out the task with the specified ID\n    setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n  };\n  return (\n    <div>\n      <h1>Task Tracker</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button onClick={addTask}>Add</button>\n      </div>\n      <ul>\n      {tasks.map((task) => (\n        <li key={task.id}>\n          {task.task}\n          <button className=\"delete-btn\" onClick={() => deleteTask(task.id)}>\n              Delete\n            </button>\n        </li>\n      ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n/*\n\n         <button className='delete-btn' onClick={() => {\n            setTasks(tasks =>tasks.filter(taskEL =>taskEL.id !== task.id));\n          }}>Delete</button>\n      */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}